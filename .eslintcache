[{"/home/jazzjohn/Programms/Sample web/Web designing/Reactjs-sample/todo-app/src/index.js":"1","/home/jazzjohn/Programms/Sample web/Web designing/Reactjs-sample/todo-app/src/App.js":"2","/home/jazzjohn/Programms/Sample web/Web designing/Reactjs-sample/todo-app/src/reportWebVitals.js":"3","/home/jazzjohn/Programms/Sample web/Web designing/Reactjs-sample/todo-app/src/todo.js":"4","/home/jazzjohn/Programms/Sample web/Web designing/Reactjs-sample/todo-app/src/samplealert.js":"5"},{"size":543,"mtime":1608019086481,"results":"6","hashOfConfig":"7"},{"size":331,"mtime":1608138868197,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1607440657258,"results":"9","hashOfConfig":"7"},{"size":5324,"mtime":1608139061274,"results":"10","hashOfConfig":"7"},{"size":1026,"mtime":1608110622091,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1ftcxta",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"14"},"/home/jazzjohn/Programms/Sample web/Web designing/Reactjs-sample/todo-app/src/index.js",[],["26","27"],"/home/jazzjohn/Programms/Sample web/Web designing/Reactjs-sample/todo-app/src/App.js",["28","29"],"import logo from './logo.svg';\nimport './App.css';\nimport Todo from './todo';\nimport Alert from './samplealert'\n\nfunction App() {\n  return (\n    <div>\n      <header className=\"App-header\">\n        <Todo color=\"white\"/>\n      </header>\n      {/* <footer>\n        <Alert />\n      </footer> */}\n    </div>\n  );\n}\n\nexport default App;\n","/home/jazzjohn/Programms/Sample web/Web designing/Reactjs-sample/todo-app/src/reportWebVitals.js",[],"/home/jazzjohn/Programms/Sample web/Web designing/Reactjs-sample/todo-app/src/todo.js",["30","31","32","33","34","35","36","37","38"],"import React,{Component} from 'react';\nimport {ListGroup,ListGroupItem,UncontrolledAlert,Alert,Col,Row,Button,Input,InputGroup,InputGroupAddon,InputGroupText, Container, Table} from 'reactstrap';\nimport './todo.css';\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert'\nimport AlertTemplate from 'react-alert-template-basic';\nimport Swal from 'sweetalert2';\n\n\n\n\nclass Todo extends Component{\n\n    constructor(props){\n        super(props)\n        this.state={\n            textEntered:\"\",\n            list:[],\n            visible:false,\n            alert:''\n\n        }\n    }\n\n    toggle=()=>{\n        this.setState({visible:!this.state.visible})\n    }\n\n    showText=(e)=>{\n        this.setState({textEntered:e.target.value.toUpperCase()})\n    }\n\n    addToScreen=(e)=>{\n        if(this.state.textEntered==='')\n        {\n            Swal.fire({\n                icon: 'error',\n                title: 'Oops...',\n                className:'sweet-alert',\n                closeOnClickOutside: false,\n                text: 'please enter your qualification details!'\n              })\n\n        }\n        else if(this.state.list.includes(this.state.textEntered)){\n            Swal.fire({\n                icon: 'error',\n                title: 'Oops...',\n                className:'sweet-alert',\n                closeOnClickOutside: false,\n                text: 'This is already exist in your list!'\n              })\n        }\n        else{\n            this.state.list.push(this.state.textEntered)\n            this.setState({list:this.state.list})\n            this.setState({textEntered:''})\n        }\n\n    }\n\n    delete=(k)=>{\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) => {\n            if (result.isConfirmed) {\n                this.state.list.splice(k, 1);\n                this.setState({list:this.state.list });\n              Swal.fire(\n                'Deleted!',\n                'Your file has been deleted.',\n                'success'\n              )\n            }\n          })\n\n\n    }\n    \n    edit=async (k)=>{\n        const { value: text } = await Swal.fire({\n            title: 'Enter your qaulification details',\n            input: 'text',\n            inputLabel: 'Your qualification',\n            inputValue:this.state.list[k],\n            showCancelButton: true,\n            inputValidator: (value) => {\n              if (!value) {\n                return 'You need to write something!'\n              }else{\n                  this.state.list.splice(k,1,value)\n                  this.setState({list:this.state.list });\n              }\n            }\n          })\n          \n          if (text) {\n            Swal.fire(`Your added qualification  is ${text}`)\n          }\n    }\n\n\n    clear=()=>{this.setState({textEntered:\"\"})}\n\n\n    render(){\n        return(\n            <React.Fragment>\n                <Container className=\"pt-5\">\n                    {/* <Row>\n                        <Col className=\"pt-2\">\n                            <Alert color=\"danger\" isOpen={this.state.visible} toggle={this.toggle} id=\"alert\">\n                                {this.state.alert}\n                            </Alert>\n                        </Col>\n                    </Row> */}\n                    <Row className=\"p-4 pt-5 justify-content-center\" id=\"header\">\n                        <Col lg={6} className=\" pt-5  addfield \">\n                            <InputGroup id=\"searchparent\">\n                                <Input id=\"search\" className=\"  text-center\" value={this.state.textEntered} placeholder=\"Add qualification details\" type=\"text\" onChange={this.showText}/>\n                            </InputGroup>\n                        </Col>\n                        <Col lg={4} className=\"pt-5 pb-5 addfield text-center\">\n                            <Button id='button'  className=\"pl-4 pr-4  \"  onClick={this.addToScreen} >ADD </Button>{' '}\n                            <Button id='button' className=\"  \" onClick={this.clear}>CLEAR</Button>{' '}\n                        </Col>\n                    </Row>\n\n                    <Row className=\"mt-2\">\n                        <Col md={12} className=\"mt-5 pt-3 justify-content center\">\n                            {this.state.list.map((itm, k) => {\n                                        return (\n                                        <ListGroup >\n                                            <ListGroupItem key='k' className=\"pl-5 mb-4\" id=\"listitem\" >{itm.toUpperCase()}\n                                            <i class=\"far fa-edit\" id=\"edit-icon\" onClick={()=>{this.edit(k)}}></i>\n                                            <i class=\"fas fa-times\" id='delete-icon' onClick={()=>{this.delete(k)}}></i></ListGroupItem>\n                                          </ListGroup>\n                                            \n                                        )\n                                    })}\n                        </Col>\n                    </Row>\n                </Container>\n\n            </React.Fragment>\n        )\n    }\n\n\n}\n\nexport default Todo;","/home/jazzjohn/Programms/Sample web/Web designing/Reactjs-sample/todo-app/src/samplealert.js",["39","40"],"import React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content'\n\nclass samplealert extends Component {\n    constructor(props){\n        super(props)\n    }\n\n    alert=()=>{\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) => {\n            if (result.isConfirmed) {\n              Swal.fire(\n                'Deleted!',\n                'Your file has been deleted.',\n                'success'\n              )\n            }\n          })\n\n    }\n\n    render() {\n        return (\n            <div>\n                <Button color=\"success\" onClick={this.alert}>Click here</Button>\n            </div>\n        );\n    }\n}\n\nexport default samplealert;",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":8,"nodeType":"47","messageId":"48","endLine":1,"endColumn":12},{"ruleId":"45","severity":1,"message":"49","line":4,"column":8,"nodeType":"47","messageId":"48","endLine":4,"endColumn":13},{"ruleId":"45","severity":1,"message":"50","line":2,"column":33,"nodeType":"47","messageId":"48","endLine":2,"endColumn":50},{"ruleId":"45","severity":1,"message":"49","line":2,"column":51,"nodeType":"47","messageId":"48","endLine":2,"endColumn":56},{"ruleId":"45","severity":1,"message":"51","line":2,"column":89,"nodeType":"47","messageId":"48","endLine":2,"endColumn":104},{"ruleId":"45","severity":1,"message":"52","line":2,"column":105,"nodeType":"47","messageId":"48","endLine":2,"endColumn":119},{"ruleId":"45","severity":1,"message":"53","line":2,"column":132,"nodeType":"47","messageId":"48","endLine":2,"endColumn":137},{"ruleId":"45","severity":1,"message":"54","line":4,"column":10,"nodeType":"47","messageId":"48","endLine":4,"endColumn":21},{"ruleId":"45","severity":1,"message":"55","line":4,"column":23,"nodeType":"47","messageId":"48","endLine":4,"endColumn":32},{"ruleId":"45","severity":1,"message":"56","line":4,"column":46,"nodeType":"47","messageId":"48","endLine":4,"endColumn":59},{"ruleId":"45","severity":1,"message":"57","line":5,"column":8,"nodeType":"47","messageId":"48","endLine":5,"endColumn":21},{"ruleId":"45","severity":1,"message":"58","line":4,"column":8,"nodeType":"47","messageId":"48","endLine":4,"endColumn":24},{"ruleId":"59","severity":1,"message":"60","line":7,"column":5,"nodeType":"61","messageId":"62","endLine":9,"endColumn":6},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Alert' is defined but never used.","'UncontrolledAlert' is defined but never used.","'InputGroupAddon' is defined but never used.","'InputGroupText' is defined but never used.","'Table' is defined but never used.","'transitions' is defined but never used.","'positions' is defined but never used.","'AlertProvider' is defined but never used.","'AlertTemplate' is defined but never used.","'withReactContent' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]